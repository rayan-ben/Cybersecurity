IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=IyEvdXNyL2Jpbi9lbnYgcHlyaG9uMwoKaW1wb3J0IGluc3BlY3QKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzeXMKZnJvbSBvcyBpbXBvcnQgbGlzdGRpciwgcGF0aApmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IERFUwpmcm9tIENyeXB0by5VdGlsLlBhZGRpbmcgaW1wb3J0IHBhZAoKQzIgPSAiaHR0cDovLzEwLjEwLjIuMjAwOjExMCIKS0VZID0gYiIxMTExMTExMSIKREVTID0gREVTLm5ldyhLRVksIERFUy5NT0RFX0VDQikKQkxPQ0tfU0laRT02NAoKZGVmIGVuY3J5cHRfZmlsZShmaWxlcGF0aCk6CiAgICBwcmludChmaWxlcGF0aCkKICAgIHdpdGggb3BlbihmaWxlcGF0aCkgYXMgZjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhZGRlZF90ZXh0ID0gcGFkKGYucmVhZCgpLmVuY29kZSgnVVRGLTgnKSwgQkxPQ0tfU0laRSkKICAgICAgICAgICAgZW5jcnlwdGVkX3RleHQgPSBERVMuZW5jcnlwdChwYWRkZWRfdGV4dCkKICAgICAgICAgICAgciA9IHJlcXVlc3RzLnBvc3QoQzIrIi9leGZpbCIsIGRhdGE9ZW5jcnlwdGVkX3RleHQpCiAgICAgICAgICAgIHdpdGggb3BlbihmaWxlcGF0aCwgIndiIikgYXMgdzoKICAgICAgICAgICAgICAgIHcud3JpdGUoZW5jcnlwdGVkX3RleHQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChlKQogICAgICAgICAgICAKCmRlZiBlbmNyeXB0KHN0YXJ0X2Rpcj0iL2hvbWUiKToKICAgIGZvciBmIGluIGxpc3RkaXIoc3RhcnRfZGlyKToKICAgICAgICBpZiBwYXRoLmlzZGlyKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdChwYXRoLmpvaW4oc3RhcnRfZGlyLCBmKSkKICAgICAgICBlbGlmIHBhdGguaXNmaWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKToKICAgICAgICAgICAgZW5jcnlwdF9maWxlKHBhdGguam9pbihzdGFydF9kaXIsIGYpKQoKZGVmIG1haW4oKToKICAgIGVuY3J5cHQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGV4aXQobWFpbigpKQo=